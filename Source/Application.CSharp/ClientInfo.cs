// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Application/client_info.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Dolittle.Application {

  /// <summary>Holder for reflection information generated from Application/client_info.proto</summary>
  public static partial class ClientInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for Application/client_info.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1BcHBsaWNhdGlvbi9jbGllbnRfaW5mby5wcm90bxIUZG9saXR0bGUuYXBw",
            "bGljYXRpb24aEXN5c3RlbS9ndWlkLnByb3RvInMKCkNsaWVudEluZm8SIAoI",
            "Y2xpZW50SWQYASABKAsyDi5kb2xpdHRsZS5ndWlkEgwKBGhvc3QYAiABKAkS",
            "DAoEcG9ydBgDIAEoBRIPCgdydW50aW1lGAQgASgJEhYKDnNlcnZpY2VzQnlO",
            "YW1lGAUgAygJQheqAhREb2xpdHRsZS5BcHBsaWNhdGlvbmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::System.Protobuf.GuidReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Dolittle.Application.ClientInfo), global::Dolittle.Application.ClientInfo.Parser, new[]{ "ClientId", "Host", "Port", "Runtime", "ServicesByName" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClientInfo : pb::IMessage<ClientInfo> {
    private static readonly pb::MessageParser<ClientInfo> _parser = new pb::MessageParser<ClientInfo>(() => new ClientInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dolittle.Application.ClientInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfo(ClientInfo other) : this() {
      clientId_ = other.clientId_ != null ? other.clientId_.Clone() : null;
      host_ = other.host_;
      port_ = other.port_;
      runtime_ = other.runtime_;
      servicesByName_ = other.servicesByName_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfo Clone() {
      return new ClientInfo(this);
    }

    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private global::System.Protobuf.guid clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::System.Protobuf.guid ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 2;
    private string host_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 3;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "runtime" field.</summary>
    public const int RuntimeFieldNumber = 4;
    private string runtime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Runtime {
      get { return runtime_; }
      set {
        runtime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "servicesByName" field.</summary>
    public const int ServicesByNameFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_servicesByName_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> servicesByName_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ServicesByName {
      get { return servicesByName_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ClientId, other.ClientId)) return false;
      if (Host != other.Host) return false;
      if (Port != other.Port) return false;
      if (Runtime != other.Runtime) return false;
      if(!servicesByName_.Equals(other.servicesByName_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (clientId_ != null) hash ^= ClientId.GetHashCode();
      if (Host.Length != 0) hash ^= Host.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (Runtime.Length != 0) hash ^= Runtime.GetHashCode();
      hash ^= servicesByName_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (clientId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ClientId);
      }
      if (Host.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Host);
      }
      if (Port != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Port);
      }
      if (Runtime.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Runtime);
      }
      servicesByName_.WriteTo(output, _repeated_servicesByName_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (clientId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientId);
      }
      if (Host.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (Runtime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Runtime);
      }
      size += servicesByName_.CalculateSize(_repeated_servicesByName_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientInfo other) {
      if (other == null) {
        return;
      }
      if (other.clientId_ != null) {
        if (clientId_ == null) {
          ClientId = new global::System.Protobuf.guid();
        }
        ClientId.MergeFrom(other.ClientId);
      }
      if (other.Host.Length != 0) {
        Host = other.Host;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.Runtime.Length != 0) {
        Runtime = other.Runtime;
      }
      servicesByName_.Add(other.servicesByName_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (clientId_ == null) {
              ClientId = new global::System.Protobuf.guid();
            }
            input.ReadMessage(ClientId);
            break;
          }
          case 18: {
            Host = input.ReadString();
            break;
          }
          case 24: {
            Port = input.ReadInt32();
            break;
          }
          case 34: {
            Runtime = input.ReadString();
            break;
          }
          case 42: {
            servicesByName_.AddEntriesFrom(input, _repeated_servicesByName_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
