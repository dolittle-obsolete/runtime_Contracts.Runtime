// GENERATED CODE -- DO NOT EDIT!
// Original file comments:
// ---------------------------------------------------------------------------------------------
//  Copyright (c) Dolittle. All rights reserved.
//  Licensed under the MIT License. See LICENSE in the project root for license information.
// --------------------------------------------------------------------------------------------
//
'use strict';
var grpc = require('grpc');
var Events_Relativity_interaction_open_tunnel_pb = require('../../Events.Relativity/interaction/open_tunnel_pb.js');
var Events_Relativity_interaction_committed_event_stream_with_context_pb = require('../../Events.Relativity/interaction/committed_event_stream_with_context_pb.js');
function serialize_dolittle_events_relativity_CommittedEventStreamWithContext(arg) {
    if (!(arg instanceof Events_Relativity_interaction_committed_event_stream_with_context_pb.CommittedEventStreamWithContext)) {
        throw new Error('Expected argument of type dolittle.events.relativity.CommittedEventStreamWithContext');
    }
    return Buffer.from(arg.serializeBinary());
}
function deserialize_dolittle_events_relativity_CommittedEventStreamWithContext(buffer_arg) {
    return Events_Relativity_interaction_committed_event_stream_with_context_pb.CommittedEventStreamWithContext.deserializeBinary(new Uint8Array(buffer_arg));
}
function serialize_dolittle_events_relativity_OpenTunnel(arg) {
    if (!(arg instanceof Events_Relativity_interaction_open_tunnel_pb.OpenTunnel)) {
        throw new Error('Expected argument of type dolittle.events.relativity.OpenTunnel');
    }
    return Buffer.from(arg.serializeBinary());
}
function deserialize_dolittle_events_relativity_OpenTunnel(buffer_arg) {
    return Events_Relativity_interaction_open_tunnel_pb.OpenTunnel.deserializeBinary(new Uint8Array(buffer_arg));
}
// Represents the service for working with quantum tunnel
var QuantumTunnelServiceService = exports.QuantumTunnelServiceService = {
    open: {
        path: '/dolittle.events.relativity.QuantumTunnelService/Open',
        requestStream: false,
        responseStream: true,
        requestType: Events_Relativity_interaction_open_tunnel_pb.OpenTunnel,
        responseType: Events_Relativity_interaction_committed_event_stream_with_context_pb.CommittedEventStreamWithContext,
        requestSerialize: serialize_dolittle_events_relativity_OpenTunnel,
        requestDeserialize: deserialize_dolittle_events_relativity_OpenTunnel,
        responseSerialize: serialize_dolittle_events_relativity_CommittedEventStreamWithContext,
        responseDeserialize: deserialize_dolittle_events_relativity_CommittedEventStreamWithContext,
    },
};
exports.QuantumTunnelServiceClient = grpc.makeGenericClientConstructor(QuantumTunnelServiceService);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVhbnR1bV90dW5uZWxfZ3JwY19wYi5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsiRXZlbnRzLlJlbGF0aXZpdHkvaW50ZXJhY3Rpb24vcXVhbnR1bV90dW5uZWxfZ3JwY19wYi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQ0FBaUM7QUFFakMsMEJBQTBCO0FBQzFCLGdHQUFnRztBQUNoRyxnREFBZ0Q7QUFDaEQsNEZBQTRGO0FBQzVGLCtGQUErRjtBQUMvRixFQUFFO0FBQ0YsWUFBWSxDQUFDO0FBQ2IsSUFBSSxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQzNCLElBQUksNENBQTRDLEdBQUcsT0FBTyxDQUFDLHVEQUF1RCxDQUFDLENBQUM7QUFDcEgsSUFBSSxvRUFBb0UsR0FBRyxPQUFPLENBQUMsK0VBQStFLENBQUMsQ0FBQztBQUVwSyxTQUFTLG9FQUFvRSxDQUFDLEdBQUc7SUFDL0UsSUFBSSxDQUFDLENBQUMsR0FBRyxZQUFZLG9FQUFvRSxDQUFDLCtCQUErQixDQUFDLEVBQUU7UUFDMUgsTUFBTSxJQUFJLEtBQUssQ0FBQyxzRkFBc0YsQ0FBQyxDQUFDO0tBQ3pHO0lBQ0QsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxlQUFlLEVBQUUsQ0FBQyxDQUFDO0FBQzVDLENBQUM7QUFFRCxTQUFTLHNFQUFzRSxDQUFDLFVBQVU7SUFDeEYsT0FBTyxvRUFBb0UsQ0FBQywrQkFBK0IsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO0FBQzVKLENBQUM7QUFFRCxTQUFTLCtDQUErQyxDQUFDLEdBQUc7SUFDMUQsSUFBSSxDQUFDLENBQUMsR0FBRyxZQUFZLDRDQUE0QyxDQUFDLFVBQVUsQ0FBQyxFQUFFO1FBQzdFLE1BQU0sSUFBSSxLQUFLLENBQUMsaUVBQWlFLENBQUMsQ0FBQztLQUNwRjtJQUNELE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsZUFBZSxFQUFFLENBQUMsQ0FBQztBQUM1QyxDQUFDO0FBRUQsU0FBUyxpREFBaUQsQ0FBQyxVQUFVO0lBQ25FLE9BQU8sNENBQTRDLENBQUMsVUFBVSxDQUFDLGlCQUFpQixDQUFDLElBQUksVUFBVSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7QUFDL0csQ0FBQztBQUdELHlEQUF5RDtBQUN6RCxJQUFJLDJCQUEyQixHQUFHLE9BQU8sQ0FBQywyQkFBMkIsR0FBRztJQUN0RSxJQUFJLEVBQUU7UUFDSixJQUFJLEVBQUUsdURBQXVEO1FBQzdELGFBQWEsRUFBRSxLQUFLO1FBQ3BCLGNBQWMsRUFBRSxJQUFJO1FBQ3BCLFdBQVcsRUFBRSw0Q0FBNEMsQ0FBQyxVQUFVO1FBQ3BFLFlBQVksRUFBRSxvRUFBb0UsQ0FBQywrQkFBK0I7UUFDbEgsZ0JBQWdCLEVBQUUsK0NBQStDO1FBQ2pFLGtCQUFrQixFQUFFLGlEQUFpRDtRQUNyRSxpQkFBaUIsRUFBRSxvRUFBb0U7UUFDdkYsbUJBQW1CLEVBQUUsc0VBQXNFO0tBQzVGO0NBQ0YsQ0FBQztBQUVGLE9BQU8sQ0FBQywwQkFBMEIsR0FBRyxJQUFJLENBQUMsNEJBQTRCLENBQUMsMkJBQTJCLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEdFTkVSQVRFRCBDT0RFIC0tIERPIE5PVCBFRElUIVxuXG4vLyBPcmlnaW5hbCBmaWxlIGNvbW1lbnRzOlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgQ29weXJpZ2h0IChjKSBEb2xpdHRsZS4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMSUNFTlNFIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy9cbid1c2Ugc3RyaWN0JztcbnZhciBncnBjID0gcmVxdWlyZSgnZ3JwYycpO1xudmFyIEV2ZW50c19SZWxhdGl2aXR5X2ludGVyYWN0aW9uX29wZW5fdHVubmVsX3BiID0gcmVxdWlyZSgnLi4vLi4vRXZlbnRzLlJlbGF0aXZpdHkvaW50ZXJhY3Rpb24vb3Blbl90dW5uZWxfcGIuanMnKTtcbnZhciBFdmVudHNfUmVsYXRpdml0eV9pbnRlcmFjdGlvbl9jb21taXR0ZWRfZXZlbnRfc3RyZWFtX3dpdGhfY29udGV4dF9wYiA9IHJlcXVpcmUoJy4uLy4uL0V2ZW50cy5SZWxhdGl2aXR5L2ludGVyYWN0aW9uL2NvbW1pdHRlZF9ldmVudF9zdHJlYW1fd2l0aF9jb250ZXh0X3BiLmpzJyk7XG5cbmZ1bmN0aW9uIHNlcmlhbGl6ZV9kb2xpdHRsZV9ldmVudHNfcmVsYXRpdml0eV9Db21taXR0ZWRFdmVudFN0cmVhbVdpdGhDb250ZXh0KGFyZykge1xuICBpZiAoIShhcmcgaW5zdGFuY2VvZiBFdmVudHNfUmVsYXRpdml0eV9pbnRlcmFjdGlvbl9jb21taXR0ZWRfZXZlbnRfc3RyZWFtX3dpdGhfY29udGV4dF9wYi5Db21taXR0ZWRFdmVudFN0cmVhbVdpdGhDb250ZXh0KSkge1xuICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgYXJndW1lbnQgb2YgdHlwZSBkb2xpdHRsZS5ldmVudHMucmVsYXRpdml0eS5Db21taXR0ZWRFdmVudFN0cmVhbVdpdGhDb250ZXh0Jyk7XG4gIH1cbiAgcmV0dXJuIEJ1ZmZlci5mcm9tKGFyZy5zZXJpYWxpemVCaW5hcnkoKSk7XG59XG5cbmZ1bmN0aW9uIGRlc2VyaWFsaXplX2RvbGl0dGxlX2V2ZW50c19yZWxhdGl2aXR5X0NvbW1pdHRlZEV2ZW50U3RyZWFtV2l0aENvbnRleHQoYnVmZmVyX2FyZykge1xuICByZXR1cm4gRXZlbnRzX1JlbGF0aXZpdHlfaW50ZXJhY3Rpb25fY29tbWl0dGVkX2V2ZW50X3N0cmVhbV93aXRoX2NvbnRleHRfcGIuQ29tbWl0dGVkRXZlbnRTdHJlYW1XaXRoQ29udGV4dC5kZXNlcmlhbGl6ZUJpbmFyeShuZXcgVWludDhBcnJheShidWZmZXJfYXJnKSk7XG59XG5cbmZ1bmN0aW9uIHNlcmlhbGl6ZV9kb2xpdHRsZV9ldmVudHNfcmVsYXRpdml0eV9PcGVuVHVubmVsKGFyZykge1xuICBpZiAoIShhcmcgaW5zdGFuY2VvZiBFdmVudHNfUmVsYXRpdml0eV9pbnRlcmFjdGlvbl9vcGVuX3R1bm5lbF9wYi5PcGVuVHVubmVsKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgYXJndW1lbnQgb2YgdHlwZSBkb2xpdHRsZS5ldmVudHMucmVsYXRpdml0eS5PcGVuVHVubmVsJyk7XG4gIH1cbiAgcmV0dXJuIEJ1ZmZlci5mcm9tKGFyZy5zZXJpYWxpemVCaW5hcnkoKSk7XG59XG5cbmZ1bmN0aW9uIGRlc2VyaWFsaXplX2RvbGl0dGxlX2V2ZW50c19yZWxhdGl2aXR5X09wZW5UdW5uZWwoYnVmZmVyX2FyZykge1xuICByZXR1cm4gRXZlbnRzX1JlbGF0aXZpdHlfaW50ZXJhY3Rpb25fb3Blbl90dW5uZWxfcGIuT3BlblR1bm5lbC5kZXNlcmlhbGl6ZUJpbmFyeShuZXcgVWludDhBcnJheShidWZmZXJfYXJnKSk7XG59XG5cblxuLy8gUmVwcmVzZW50cyB0aGUgc2VydmljZSBmb3Igd29ya2luZyB3aXRoIHF1YW50dW0gdHVubmVsXG52YXIgUXVhbnR1bVR1bm5lbFNlcnZpY2VTZXJ2aWNlID0gZXhwb3J0cy5RdWFudHVtVHVubmVsU2VydmljZVNlcnZpY2UgPSB7XG4gIG9wZW46IHtcbiAgICBwYXRoOiAnL2RvbGl0dGxlLmV2ZW50cy5yZWxhdGl2aXR5LlF1YW50dW1UdW5uZWxTZXJ2aWNlL09wZW4nLFxuICAgIHJlcXVlc3RTdHJlYW06IGZhbHNlLFxuICAgIHJlc3BvbnNlU3RyZWFtOiB0cnVlLFxuICAgIHJlcXVlc3RUeXBlOiBFdmVudHNfUmVsYXRpdml0eV9pbnRlcmFjdGlvbl9vcGVuX3R1bm5lbF9wYi5PcGVuVHVubmVsLFxuICAgIHJlc3BvbnNlVHlwZTogRXZlbnRzX1JlbGF0aXZpdHlfaW50ZXJhY3Rpb25fY29tbWl0dGVkX2V2ZW50X3N0cmVhbV93aXRoX2NvbnRleHRfcGIuQ29tbWl0dGVkRXZlbnRTdHJlYW1XaXRoQ29udGV4dCxcbiAgICByZXF1ZXN0U2VyaWFsaXplOiBzZXJpYWxpemVfZG9saXR0bGVfZXZlbnRzX3JlbGF0aXZpdHlfT3BlblR1bm5lbCxcbiAgICByZXF1ZXN0RGVzZXJpYWxpemU6IGRlc2VyaWFsaXplX2RvbGl0dGxlX2V2ZW50c19yZWxhdGl2aXR5X09wZW5UdW5uZWwsXG4gICAgcmVzcG9uc2VTZXJpYWxpemU6IHNlcmlhbGl6ZV9kb2xpdHRsZV9ldmVudHNfcmVsYXRpdml0eV9Db21taXR0ZWRFdmVudFN0cmVhbVdpdGhDb250ZXh0LFxuICAgIHJlc3BvbnNlRGVzZXJpYWxpemU6IGRlc2VyaWFsaXplX2RvbGl0dGxlX2V2ZW50c19yZWxhdGl2aXR5X0NvbW1pdHRlZEV2ZW50U3RyZWFtV2l0aENvbnRleHQsXG4gIH0sXG59O1xuXG5leHBvcnRzLlF1YW50dW1UdW5uZWxTZXJ2aWNlQ2xpZW50ID0gZ3JwYy5tYWtlR2VuZXJpY0NsaWVudENvbnN0cnVjdG9yKFF1YW50dW1UdW5uZWxTZXJ2aWNlU2VydmljZSk7XG4iXX0=