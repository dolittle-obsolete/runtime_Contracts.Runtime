// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Events.Relativity/Microservice/committed_event_stream.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Dolittle.Events.Relativity.Microservice {

  /// <summary>Holder for reflection information generated from Events.Relativity/Microservice/committed_event_stream.proto</summary>
  public static partial class CommittedEventStreamReflection {

    #region Descriptor
    /// <summary>File descriptor for Events.Relativity/Microservice/committed_event_stream.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommittedEventStreamReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjtFdmVudHMuUmVsYXRpdml0eS9NaWNyb3NlcnZpY2UvY29tbWl0dGVkX2V2",
            "ZW50X3N0cmVhbS5wcm90bxInZG9saXR0bGUuZXZlbnRzLnJlbGF0aXZpdHku",
            "bWljcm9zZXJ2aWNlGhFzeXN0ZW0vZ3VpZC5wcm90bxo7RXZlbnRzLlJlbGF0",
            "aXZpdHkvTWljcm9zZXJ2aWNlL3ZlcnNpb25lZF9ldmVudF9zb3VyY2UucHJv",
            "dG8aM0V2ZW50cy5SZWxhdGl2aXR5L01pY3Jvc2VydmljZS9ldmVudF9lbnZl",
            "bG9wZS5wcm90byKVAgoUQ29tbWl0dGVkRXZlbnRTdHJlYW0STQoGc291cmNl",
            "GAEgASgLMj0uZG9saXR0bGUuZXZlbnRzLnJlbGF0aXZpdHkubWljcm9zZXJ2",
            "aWNlLlZlcnNpb25lZEV2ZW50U291cmNlEhAKCHNlcXVlbmNlGAIgASgEEhoK",
            "AmlkGAMgASgLMg4uZG9saXR0bGUuZ3VpZBIRCgl0aW1lU3RhbXAYBCABKAMS",
            "JQoNY29ycmVsYXRpb25JZBgFIAEoCzIOLmRvbGl0dGxlLmd1aWQSRgoGZXZl",
            "bnRzGAYgAygLMjYuZG9saXR0bGUuZXZlbnRzLnJlbGF0aXZpdHkubWljcm9z",
            "ZXJ2aWNlLkV2ZW50RW52ZWxvcGVCKqoCJ0RvbGl0dGxlLkV2ZW50cy5SZWxh",
            "dGl2aXR5Lk1pY3Jvc2VydmljZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::System.Protobuf.GuidReflection.Descriptor, global::Dolittle.Events.Relativity.Microservice.VersionedEventSourceReflection.Descriptor, global::Dolittle.Events.Relativity.Microservice.EventEnvelopeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Dolittle.Events.Relativity.Microservice.CommittedEventStream), global::Dolittle.Events.Relativity.Microservice.CommittedEventStream.Parser, new[]{ "Source", "Sequence", "Id", "TimeStamp", "CorrelationId", "Events" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Represents a committed event stream
  /// </summary>
  public sealed partial class CommittedEventStream : pb::IMessage<CommittedEventStream> {
    private static readonly pb::MessageParser<CommittedEventStream> _parser = new pb::MessageParser<CommittedEventStream>(() => new CommittedEventStream());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommittedEventStream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dolittle.Events.Relativity.Microservice.CommittedEventStreamReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommittedEventStream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommittedEventStream(CommittedEventStream other) : this() {
      source_ = other.source_ != null ? other.source_.Clone() : null;
      sequence_ = other.sequence_;
      id_ = other.id_ != null ? other.id_.Clone() : null;
      timeStamp_ = other.timeStamp_;
      correlationId_ = other.correlationId_ != null ? other.correlationId_.Clone() : null;
      events_ = other.events_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommittedEventStream Clone() {
      return new CommittedEventStream(this);
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 1;
    private global::Dolittle.Events.Relativity.Microservice.VersionedEventSource source_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dolittle.Events.Relativity.Microservice.VersionedEventSource Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    /// <summary>Field number for the "sequence" field.</summary>
    public const int SequenceFieldNumber = 2;
    private ulong sequence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Sequence {
      get { return sequence_; }
      set {
        sequence_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private global::System.Protobuf.guid id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::System.Protobuf.guid Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "timeStamp" field.</summary>
    public const int TimeStampFieldNumber = 4;
    private long timeStamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TimeStamp {
      get { return timeStamp_; }
      set {
        timeStamp_ = value;
      }
    }

    /// <summary>Field number for the "correlationId" field.</summary>
    public const int CorrelationIdFieldNumber = 5;
    private global::System.Protobuf.guid correlationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::System.Protobuf.guid CorrelationId {
      get { return correlationId_; }
      set {
        correlationId_ = value;
      }
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Dolittle.Events.Relativity.Microservice.EventEnvelope> _repeated_events_codec
        = pb::FieldCodec.ForMessage(50, global::Dolittle.Events.Relativity.Microservice.EventEnvelope.Parser);
    private readonly pbc::RepeatedField<global::Dolittle.Events.Relativity.Microservice.EventEnvelope> events_ = new pbc::RepeatedField<global::Dolittle.Events.Relativity.Microservice.EventEnvelope>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Dolittle.Events.Relativity.Microservice.EventEnvelope> Events {
      get { return events_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommittedEventStream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommittedEventStream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Source, other.Source)) return false;
      if (Sequence != other.Sequence) return false;
      if (!object.Equals(Id, other.Id)) return false;
      if (TimeStamp != other.TimeStamp) return false;
      if (!object.Equals(CorrelationId, other.CorrelationId)) return false;
      if(!events_.Equals(other.events_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (source_ != null) hash ^= Source.GetHashCode();
      if (Sequence != 0UL) hash ^= Sequence.GetHashCode();
      if (id_ != null) hash ^= Id.GetHashCode();
      if (TimeStamp != 0L) hash ^= TimeStamp.GetHashCode();
      if (correlationId_ != null) hash ^= CorrelationId.GetHashCode();
      hash ^= events_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (source_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Source);
      }
      if (Sequence != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Sequence);
      }
      if (id_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Id);
      }
      if (TimeStamp != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TimeStamp);
      }
      if (correlationId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CorrelationId);
      }
      events_.WriteTo(output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (source_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Source);
      }
      if (Sequence != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sequence);
      }
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (TimeStamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimeStamp);
      }
      if (correlationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CorrelationId);
      }
      size += events_.CalculateSize(_repeated_events_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommittedEventStream other) {
      if (other == null) {
        return;
      }
      if (other.source_ != null) {
        if (source_ == null) {
          Source = new global::Dolittle.Events.Relativity.Microservice.VersionedEventSource();
        }
        Source.MergeFrom(other.Source);
      }
      if (other.Sequence != 0UL) {
        Sequence = other.Sequence;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::System.Protobuf.guid();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.TimeStamp != 0L) {
        TimeStamp = other.TimeStamp;
      }
      if (other.correlationId_ != null) {
        if (correlationId_ == null) {
          CorrelationId = new global::System.Protobuf.guid();
        }
        CorrelationId.MergeFrom(other.CorrelationId);
      }
      events_.Add(other.events_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (source_ == null) {
              Source = new global::Dolittle.Events.Relativity.Microservice.VersionedEventSource();
            }
            input.ReadMessage(Source);
            break;
          }
          case 16: {
            Sequence = input.ReadUInt64();
            break;
          }
          case 26: {
            if (id_ == null) {
              Id = new global::System.Protobuf.guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 32: {
            TimeStamp = input.ReadInt64();
            break;
          }
          case 42: {
            if (correlationId_ == null) {
              CorrelationId = new global::System.Protobuf.guid();
            }
            input.ReadMessage(CorrelationId);
            break;
          }
          case 50: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
