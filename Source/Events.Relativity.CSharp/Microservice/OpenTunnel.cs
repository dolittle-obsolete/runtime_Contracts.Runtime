// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Events.Relativity/Microservice/open_tunnel.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Dolittle.Events.Relativity.Microservice {

  /// <summary>Holder for reflection information generated from Events.Relativity/Microservice/open_tunnel.proto</summary>
  public static partial class OpenTunnelReflection {

    #region Descriptor
    /// <summary>File descriptor for Events.Relativity/Microservice/open_tunnel.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OpenTunnelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjBFdmVudHMuUmVsYXRpdml0eS9NaWNyb3NlcnZpY2Uvb3Blbl90dW5uZWwu",
            "cHJvdG8SJ2RvbGl0dGxlLmV2ZW50cy5yZWxhdGl2aXR5Lm1pY3Jvc2Vydmlj",
            "ZRotRXZlbnRzLlJlbGF0aXZpdHkvTWljcm9zZXJ2aWNlL2FydGlmYWN0LnBy",
            "b3RvGjJFdmVudHMuUmVsYXRpdml0eS9NaWNyb3NlcnZpY2UvdGVuYW50X29m",
            "ZnNldC5wcm90byLWAQoKT3BlblR1bm5lbBITCgthcHBsaWNhdGlvbhgBIAEo",
            "DBIWCg5ib3VuZGVkQ29udGV4dBgCIAEoDBIQCghjbGllbnRJZBgDIAEoDBJG",
            "CgdvZmZzZXRzGAQgAygLMjUuZG9saXR0bGUuZXZlbnRzLnJlbGF0aXZpdHku",
            "bWljcm9zZXJ2aWNlLlRlbmFudE9mZnNldBJBCgZldmVudHMYBSADKAsyMS5k",
            "b2xpdHRsZS5ldmVudHMucmVsYXRpdml0eS5taWNyb3NlcnZpY2UuQXJ0aWZh",
            "Y3RCKqoCJ0RvbGl0dGxlLkV2ZW50cy5SZWxhdGl2aXR5Lk1pY3Jvc2Vydmlj",
            "ZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Dolittle.Events.Relativity.Microservice.ArtifactReflection.Descriptor, global::Dolittle.Events.Relativity.Microservice.TenantOffsetReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Dolittle.Events.Relativity.Microservice.OpenTunnel), global::Dolittle.Events.Relativity.Microservice.OpenTunnel.Parser, new[]{ "Application", "BoundedContext", "ClientId", "Offsets", "Events" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Open tunnel is the message sent when opening a tunnel from a singularity towards an event horizon
  /// </summary>
  public sealed partial class OpenTunnel : pb::IMessage<OpenTunnel> {
    private static readonly pb::MessageParser<OpenTunnel> _parser = new pb::MessageParser<OpenTunnel>(() => new OpenTunnel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OpenTunnel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dolittle.Events.Relativity.Microservice.OpenTunnelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenTunnel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenTunnel(OpenTunnel other) : this() {
      application_ = other.application_;
      boundedContext_ = other.boundedContext_;
      clientId_ = other.clientId_;
      offsets_ = other.offsets_.Clone();
      events_ = other.events_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenTunnel Clone() {
      return new OpenTunnel(this);
    }

    /// <summary>Field number for the "application" field.</summary>
    public const int ApplicationFieldNumber = 1;
    private pb::ByteString application_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Application {
      get { return application_; }
      set {
        application_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "boundedContext" field.</summary>
    public const int BoundedContextFieldNumber = 2;
    private pb::ByteString boundedContext_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BoundedContext {
      get { return boundedContext_; }
      set {
        boundedContext_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 3;
    private pb::ByteString clientId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "offsets" field.</summary>
    public const int OffsetsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Dolittle.Events.Relativity.Microservice.TenantOffset> _repeated_offsets_codec
        = pb::FieldCodec.ForMessage(34, global::Dolittle.Events.Relativity.Microservice.TenantOffset.Parser);
    private readonly pbc::RepeatedField<global::Dolittle.Events.Relativity.Microservice.TenantOffset> offsets_ = new pbc::RepeatedField<global::Dolittle.Events.Relativity.Microservice.TenantOffset>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Dolittle.Events.Relativity.Microservice.TenantOffset> Offsets {
      get { return offsets_; }
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Dolittle.Events.Relativity.Microservice.Artifact> _repeated_events_codec
        = pb::FieldCodec.ForMessage(42, global::Dolittle.Events.Relativity.Microservice.Artifact.Parser);
    private readonly pbc::RepeatedField<global::Dolittle.Events.Relativity.Microservice.Artifact> events_ = new pbc::RepeatedField<global::Dolittle.Events.Relativity.Microservice.Artifact>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Dolittle.Events.Relativity.Microservice.Artifact> Events {
      get { return events_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OpenTunnel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OpenTunnel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Application != other.Application) return false;
      if (BoundedContext != other.BoundedContext) return false;
      if (ClientId != other.ClientId) return false;
      if(!offsets_.Equals(other.offsets_)) return false;
      if(!events_.Equals(other.events_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Application.Length != 0) hash ^= Application.GetHashCode();
      if (BoundedContext.Length != 0) hash ^= BoundedContext.GetHashCode();
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      hash ^= offsets_.GetHashCode();
      hash ^= events_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Application.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Application);
      }
      if (BoundedContext.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(BoundedContext);
      }
      if (ClientId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ClientId);
      }
      offsets_.WriteTo(output, _repeated_offsets_codec);
      events_.WriteTo(output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Application.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Application);
      }
      if (BoundedContext.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BoundedContext);
      }
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ClientId);
      }
      size += offsets_.CalculateSize(_repeated_offsets_codec);
      size += events_.CalculateSize(_repeated_events_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OpenTunnel other) {
      if (other == null) {
        return;
      }
      if (other.Application.Length != 0) {
        Application = other.Application;
      }
      if (other.BoundedContext.Length != 0) {
        BoundedContext = other.BoundedContext;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      offsets_.Add(other.offsets_);
      events_.Add(other.events_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Application = input.ReadBytes();
            break;
          }
          case 18: {
            BoundedContext = input.ReadBytes();
            break;
          }
          case 26: {
            ClientId = input.ReadBytes();
            break;
          }
          case 34: {
            offsets_.AddEntriesFrom(input, _repeated_offsets_codec);
            break;
          }
          case 42: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
